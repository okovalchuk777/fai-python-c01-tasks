# Теория вероятностей и математическая статистика (семинары)
# Урок 9. Линейная регрессия Логистическая регрессия
#
# Задача 1_2 (Математические операции БЕЗ использования intercept).
# Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks): zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110], ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832]. Используя математические операции, посчитать коэффициенты линейной регрессии, приняв за X заработную плату (то есть, zp - признак), а за y - значения скорингового балла (то есть, ks - целевая переменная). Произвести расчет БЕЗ использования intercept.

import numpy as np
import matplotlib.pyplot as plt
from sklearn.metrics import mean_squared_error

zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110]
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832]

ZP = np.array(zp)
KS = np.array(ks)

ZP_reshaped = ZP.reshape((len(ZP), 1))

KS_reshaped = KS.reshape((len(KS), 1))

B = np.dot(np.linalg.inv(np.dot(ZP_reshaped.T, ZP_reshaped)), ZP_reshaped.T @ KS_reshaped)
# print(B)
print(f'Коэффициент B1 БЕЗ учёта коэффициента B0 (intercept) = {B[0]}')

KS_pred = B[0] * ZP

mse = mean_squared_error(KS, KS_pred)
print(f'Среднеквадратическая ошибка прогноза БЕЗ учёта коэффициента B0 (intercept) = {mse}')

plt.scatter(ZP, KS)
plt.plot(ZP, KS_pred)
plt.title(f'r2= {(np.corrcoef(ZP, KS))**2}')
plt.xlabel('x')
plt.ylabel('y')
plt.show()

# Коэффициент B1 БЕЗ учёта коэффициента B0 (intercept) = [5.88982042]
# Среднеквадратическая ошибка прогноза БЕЗ учёта коэффициента B0 (intercept) = 56516.8584157194
# Полученное нами значение mse (намного больше 0) говорит о том. что наша модель, построенная на базе линейной регрессии, не точна и необходимо использовать другие модели анализа данных.
